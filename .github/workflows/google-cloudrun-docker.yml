name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main", "gh-actions" ] 
  workflow_dispatch:  

env:
  SPRING_PROFILES_ACTIVE: cloud
  PROJECT_ID: optical-mind-406809
  GAR_LOCATION: europe-west1
  SERVICE: cloud-chat
  REGION: europe-west1

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
             
      # BEGIN - Docker auth and build (NOTE: If you already have a container image, these Docker steps can be omitted)

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: _json_key
          password: '${{ secrets.GOOGLE_CREDENTIALS }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Debug
        run: |
          echo "GAR_LOCATION: ${{ env.GAR_LOCATION }}"
          echo "PROJECT_ID: ${{ env.PROJECT_ID }}"
          echo "SERVICE: ${{ env.SERVICE }}"
          echo "github.sha: ${{ github.sha }}"    

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" ./chat 
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"
      
         
      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: SPRING_PROFILES_ACTIVE=${{ env.SPRING_PROFILES_ACTIVE }}
          public: true

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
